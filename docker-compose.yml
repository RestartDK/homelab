name: homelab
services:
  caddy:
    container_name: caddy
    hostname: caddy
    image: restartdk/caddy-cloudflare:latest
    restart: unless-stopped
    depends_on:
      - adguardhome
    networks:
      - caddynet
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - SERVER_URL=${SERVER_URL}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CUP_DOCKER_PORT=${CUP_DOCKER_PORT}
      - GLANCE_PORT=${GLANCE_PORT}
      - GLANCE_DOCKER_PORT=${GLANCE_DOCKER_PORT}
      - KOMGA_PORT=${KOMGA_PORT}
      - KOMGA_DOCKER_PORT=${KOMGA_DOCKER_PORT}
      - JELLYFIN_PORT=${JELLYFIN_PORT}
      - JELLYFIN_DOCKER_PORT=${JELLYFIN_DOCKER_PORT}
      - JELLYSEERR_PORT=${JELLYSEERR_PORT}
      - JELLYSEERR_DOCKER_PORT=${JELLYSEERR_DOCKER_PORT}
      - RADARR_PORT=${RADARR_PORT}
      - RADARR_DOCKER_PORT=${RADARR_DOCKER_PORT}
      - SONARR_PORT=${SONARR_PORT}
      - SONARR_DOCKER_PORT=${SONARR_DOCKER_PORT}
      - PROWLARR_PORT=${PROWLARR_PORT}
      - PROWLARR_DOCKER_PORT=${PROWLARR_DOCKER_PORT}
      - SUWAYOMI_PORT=${SUWAYOMI_PORT}
      - SUWAYOMI_DOCKER_PORT=${SUWAYOMI_DOCKER_PORT}
      - NEXTCLOUD_PORT=${NEXTCLOUD_PORT}
      - NEXTCLOUD_DOCKER_PORT=${NEXTCLOUD_DOCKER_PORT}
      - COCKPIT_PORT=${COCKPIT_PORT}
      - DOKPLOY_HOST=${DOKPLOY_HOST}
      - DOKPLOY_UI_PORT=${DOKPLOY_UI_PORT}
      - OLLAMA_HOST=${OLLAMA_HOST}
      - OLLAMA_PORT=${OLLAMA_PORT}
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile:Z
      - caddy_data:/data:Z
      - caddy_config:/config:Z
    extra_hosts:
         - host.docker.internal:host-gateway
         - ollama:${OLLAMA_HOST}

  adguardhome:  
    image: adguard/adguardhome  
    container_name: adguardhome  
    restart: unless-stopped  
    labels:
      glance.name: AdGuard Home
      glance.icon: si:adguard
      glance.url: https://adguard.${DOMAIN}
      glance.category: infra
    networks:
      - caddynet
    env_file:
      - .env
    ports:  
      # Expose port 53 on TCP and UDP for DNS queries
      - "${ADGUARD_DNS_PORT}:${ADGUARD_DOCKER_DNS_PORT}/tcp"
      - "${ADGUARD_DNS_PORT}:${ADGUARD_DOCKER_DNS_PORT}/udp"

      # Expose port 80 on TCP for HTTP web interface
      - "${ADGUARD_HTTP_PORT}:${ADGUARD_DOCKER_HTTP_PORT}/tcp"

      # Expose port 3000 on TCP for AdGuard Home's API
      - "${ADGUARD_API_PORT}:${ADGUARD_DOCKER_API_PORT}/tcp"

    volumes:  
      - adguard_config:/opt/adguardhome/work:Z  
      - $PWD/adguard:/opt/adguardhome/conf:Z


  glance:
    image: glanceapp/glance
    container_name: glance
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env
    volumes:
      - ${GLANCE_PATH}/config:/app/config:Z
      - ${ASSETS_PATH}:/app/assets:Z
      - /run/user/1000/podman/podman.sock:/var/run/docker.sock:z
    ports:
      - ${GLANCE_PORT}:${GLANCE_DOCKER_PORT}

  komga:
    image: gotson/komga
    container_name: komga
    restart: unless-stopped
    labels:
      glance.name: Komga
      glance.icon: si:komga
      glance.url: https://library.${DOMAIN}
      glance.category: media
    networks:
      - caddynet
    env_file:
      - .env
    environment:
      - KOMGA_PORT=${KOMGA_PORT}
      - KOMGA_DOCKER_PORT=${KOMGA_DOCKER_PORT}
      - KOMGA_PATH=${KOMGA_PATH}
      - BOOKS_PATH=${BOOKS_PATH}
    volumes:
      - komga_config:/config:Z
      - komga_data:/data:Z
    ports:
      - ${KOMGA_PORT}:${KOMGA_DOCKER_PORT}

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: "unless-stopped"
    labels:
      glance.name: Jellyfin
      glance.icon: si:jellyfin
      glance.url: https://media.${DOMAIN}
      glance.category: media
    networks:
      - caddynet
    env_file:
      - .env
    volumes:
      - jellyfin_config:/config:Z
      - jellyfin_cache:/cache:Z
      - ${MEDIA_PATH}:/media:Z
    ports:
      - ${JELLYFIN_PORT}:${JELLYFIN_DOCKER_PORT}

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    restart: unless-stopped
    labels:
      glance.name: Jellyseerr
      glance.icon: si:jellyseerr
      glance.url: https://jellyseerr.${DOMAIN}
      glance.category: media
    networks:
      - caddynet
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Paris
    ports:
      - ${JELLYSEERR_PORT}:${JELLYSEERR_DOCKER_PORT}
    volumes:
      - jellyseerr_config:/app/config:Z
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    labels:
      glance.name: Radarr
      glance.icon: si:radarr
      glance.url: https://radarr.${DOMAIN}
      glance.category: media
    networks:
      - caddynet
    volumes:
      - radarr_config:/config:Z
      - ${DATA_PATH}:/data:Z
    ports:
      - ${RADARR_PORT}:${RADARR_DOCKER_PORT}

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    labels:
      glance.name: Sonarr
      glance.icon: si:sonarr
      glance.url: https://sonarr.${DOMAIN}
      glance.category: media
    networks:
      - caddynet
    volumes:
      - sonarr_config:/config:Z
      - ${DATA_PATH}:/data:Z
    ports:
      - ${SONARR_PORT}:${SONARR_DOCKER_PORT}
  
  prowlarr:
      image: lscr.io/linuxserver/prowlarr:latest
      container_name: prowlarr
      restart: unless-stopped
      labels:
        glance.name: Prowlarr
        glance.icon: si:prowlarr
        glance.url: https://prowlarr.${DOMAIN}
        glance.category: media
      networks:
        - caddynet
      volumes:
        - prowlarr_config:/config:Z
      ports:
        - ${PROWLARR_PORT}:${PROWLARR_DOCKER_PORT}

  portainer:
    image: portainer/portainer-ce:lts
    container_name: portainer
    restart: always
    privileged: true
    networks:
      - caddynet
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /run/user/1000/podman/podman.sock:/var/run/docker.sock:z
      - portainer_data:/data
    labels:
      glance.name: Portainer
      glance.icon: si:portainer
      glance.url: https://portainer.${DOMAIN}
      glance.category: infra
  nextcloud:
    image: ghcr.io/nextcloud-releases/all-in-one:latest
    restart: unless-stopped
    container_name: nextcloud-aio-mastercontainer
    init: true
    labels:
      glance.name: Nextcloud
      glance.icon: si:nextcloud
      glance.url: https://nextcloud.${DOMAIN}
      glance.category: productivity
    security_opt: ["label:disable"]
    networks:
      - caddynet
    env_file:
      - .env
    ports:
      - ${NEXTCLOUD_PORT}:${NEXTCLOUD_DOCKER_PORT}
    environment:
        - APACHE_PORT=11000
        - APACHE_IP_BINDING=0.0.0.0
        - SKIP_DOMAIN_VALIDATION=true
        - APACHE_ADDITIONAL_NETWORK=caddynet
    volumes:
        - nextcloud_aio_mastercontainer:/mnt/docker-aio-config
        - /run/user/1000/podman/podman.sock:/var/run/docker.sock:ro

networks:
  caddynet:
    external: true

volumes:
  caddy_data:
  caddy_config:
  komga_data:
  komga_config:
  jellyfin_config:
  jellyfin_cache:
  jellyseerr_config:
  radarr_config:
  sonarr_config:
  prowlarr_config:
  nextcloud:
  db:
  adguard_config:
  adguard_confdir:
  portainer_data:
  nextcloud_aio_mastercontainer:
    external: true
