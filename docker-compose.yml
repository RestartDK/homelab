name: homelab
services:
  caddy:
    container_name: caddy
    hostname: caddy
    image: restartdk/caddy-cloudflare:latest
    restart: unless-stopped
    networks:
      - caddynet
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    env_file:
      - .env 
    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile:Z   
      - caddy_data:/data:Z                       
      - caddy_config:/config:Z                   
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - DOMAIN=${DOMAIN}
      - GLANCE_PORT=${GLANCE_PORT}
      - KOMGA_PORT=${KOMGA_PORT}
      - JELLYFIN_PORT=${JELLYFIN_PORT}
      - JELLYSEERR_PORT=${JELLYSEERR_PORT}
      - COCKPIT_PORT=${COCKPIT_PORT}
    extra_hosts:
         - host.docker.internal:host-gateway

  glance:
    image: glanceapp/glance
    container_name: glance
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env 
    volumes:
      - ${GLANCE_PATH}/config:/app/config:Z
      - ${ASSETS_PATH}:/app/assets:Z
    ports:
      - 8080:${GLANCE_PORT}
    environment:
      - GLANCE_PORT=${GLANCE_PORT}
      - TAILSCALE_API_KEY=${TAILSCALE_API_KEY}
      - GLANCE_SECRET=${GLANCE_SECRET}
      - GLANCE_DANIEL_PASSWORD=${GLANCE_DANIEL_PASSWORD}
      - SERVER_URL=${SERVER_URL}

  komga:
    image: gotson/komga
    container_name: komga
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env 
    volumes:
      - komga_config:/config:Z                     
      - ${BOOKS_PATH}:/data:Z                    
    ports:
      - 25600:${KOMGA_PORT}

  suwayomi:
    image: ghcr.io/suwayomi/suwayomi-server:stable
    container_name: suwayomi
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env
    environment:
      - TZ=Europe/Paris
    volumes:
      - ${MANGA_PATH}:/root/.local/share/Tachidesk:Z  
    ports:
      - 4568:${SUWAYOMI_PORT}

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: "unless-stopped"
    networks:
      - caddynet
    env_file:
      - .env 
    volumes:
      - jellyfin_config:/config:Z                  
      - jellyfin_cache:/cache:Z                    
      - ${MEDIA_PATH}:/media:Z                   
    ports:
      - 8096:${JELLYFIN_PORT}

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env 
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Paris
      - PORT=${JELLYSEERR_PORT} 
    ports:
      - 5055:${JELLYSEERR_PORT}
    volumes:
      - jellyseerr_config:/app/config:Z            
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    networks:
      - caddynet
    environment:
      - TZ=Europe/Paris
    volumes:
      - radarr_config:/config:Z                    
      - ${DATA_PATH}:/data:Z                     
    ports:
      - 7878:${RADARR_PORT}

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    networks:
      - caddynet
    environment:
      - TZ=Europe/Paris
    volumes:
      - sonarr_config:/config:Z                    
      - ${DATA_PATH}:/data:Z                     
    ports:
      - 8989:${SONARR_PORT}
  
  prowlarr:
      image: lscr.io/linuxserver/prowlarr:latest
      container_name: prowlarr
      restart: unless-stopped
      networks:
        - caddynet
      environment:
        - TZ=Europe/Paris
      volumes:
        - prowlarr_config:/config:Z
      ports:
        - 9696:${PROWLARR_PORT}

networks:
  caddynet:
    attachable: true
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  glance_config:
  komga_config:
  jellyfin_config:
  jellyfin_cache:
  jellyseerr_config:
  radarr_config:
  sonarr_config:
  prowlarr_config:
