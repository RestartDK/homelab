name: homelab
services:
  caddy:
    container_name: caddy
    hostname: caddy
    image: restartdk/caddy-cloudflare:latest
    restart: unless-stopped
    networks:
      - caddynet
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    env_file:
      - .env
    environment:
      - DOMAIN=${DOMAIN}
      - SERVER_URL=${SERVER_URL}
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - GLANCE_PORT=${GLANCE_PORT}
      - GLANCE_DOCKER_PORT=${GLANCE_DOCKER_PORT}
      - KOMGA_PORT=${KOMGA_PORT}
      - KOMGA_DOCKER_PORT=${KOMGA_DOCKER_PORT}
      - JELLYFIN_PORT=${JELLYFIN_PORT}
      - JELLYFIN_DOCKER_PORT=${JELLYFIN_DOCKER_PORT}
      - JELLYSEERR_PORT=${JELLYSEERR_PORT}
      - JELLYSEERR_DOCKER_PORT=${JELLYSEERR_DOCKER_PORT}
      - RADARR_PORT=${RADARR_PORT}
      - RADARR_DOCKER_PORT=${RADARR_DOCKER_PORT}
      - SONARR_PORT=${SONARR_PORT}
      - SONARR_DOCKER_PORT=${SONARR_DOCKER_PORT}
      - PROWLARR_PORT=${PROWLARR_PORT}
      - PROWLARR_DOCKER_PORT=${PROWLARR_DOCKER_PORT}
      - SUWAYOMI_PORT=${SUWAYOMI_PORT}
      - SUWAYOMI_DOCKER_PORT=${SUWAYOMI_DOCKER_PORT}
      - NEXTCLOUD_PORT=${NEXTCLOUD_PORT}
      - NEXTCLOUD_DOCKER_PORT=${NEXTCLOUD_DOCKER_PORT}
      - COCKPIT_PORT=${COCKPIT_PORT}

    volumes:
      - $PWD/Caddyfile:/etc/caddy/Caddyfile:Z
      - caddy_data:/data:Z
      - caddy_config:/config:Z
    extra_hosts:
         - host.docker.internal:host-gateway

  glance:
    image: glanceapp/glance
    container_name: glance
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env
    environment:
      - GLANCE_SECRET=${GLANCE_SECRET}
      - GLANCE_DANIEL_PASSWORD=${GLANCE_DANIEL_PASSWORD}
      - GLANCE_PORT=${GLANCE_PORT}
    volumes:
      - ${GLANCE_PATH}/config:/app/config:Z
      - ${ASSETS_PATH}:/app/assets
    ports:
      - ${GLANCE_PORT}:${GLANCE_DOCKER_PORT}

  komga:
    image: gotson/komga
    container_name: komga
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env
    environment:
      - KOMGA_PORT=${KOMGA_PORT}
      - KOMGA_DOCKER_PORT=${KOMGA_DOCKER_PORT}
      - KOMGA_PATH=${KOMGA_PATH}
      - BOOKS_PATH=${BOOKS_PATH}
    volumes:
      - komga_config:/config:Z
      - ${BOOKS_PATH}:/data:Z
    ports:
      - ${KOMGA_PORT}:${KOMGA_DOCKER_PORT}

  suwayomi:
    image: ghcr.io/suwayomi/suwayomi-server:stable
    container_name: suwayomi
    restart: unless-stopped
    networks:
      - caddynet
    env_file:
      - .env
    volumes:
      - ${MANGA_PATH}:/root/.local/share/Tachidesk:Z
    ports:
      - ${SUWAYOMI_PORT}:${SUWAYOMI_DOCKER_PORT}

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: "unless-stopped"
    networks:
      - caddynet
    env_file:
      - .env
    volumes:
      - jellyfin_config:/config:Z
      - jellyfin_cache:/cache:Z
      - ${MEDIA_PATH}:/media:Z
    ports:
      - ${JELLYFIN_PORT}:${JELLYFIN_DOCKER_PORT}

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    restart: unless-stopped
    networks:
      - caddynet
    environment:
      - LOG_LEVEL=debug
      - TZ=Europe/Paris
    ports:
      - ${JELLYSEERR_PORT}:${JELLYSEERR_DOCKER_PORT}
    volumes:
      - jellyseerr_config:/app/config:Z
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5055/api/v1/status || exit 1
      start_period: 20s
      timeout: 3s
      interval: 15s
      retries: 3

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    networks:
      - caddynet
    volumes:
      - radarr_config:/config:Z
      - ${DATA_PATH}:/data:Z
    ports:
      - ${RADARR_PORT}:${RADARR_DOCKER_PORT}

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    networks:
      - caddynet
    volumes:
      - sonarr_config:/config:Z
      - ${DATA_PATH}:/data:Z
    ports:
      - ${SONARR_PORT}:${SONARR_DOCKER_PORT}
  
  prowlarr:
      image: lscr.io/linuxserver/prowlarr:latest
      container_name: prowlarr
      restart: unless-stopped
      networks:
        - caddynet
      volumes:
        - prowlarr_config:/config:Z
      ports:
        - ${PROWLARR_PORT}:${PROWLARR_DOCKER_PORT}

  db:
    image: mariadb:lts
    container_name: nextcloud_db
    restart: always
    networks:
      - caddynet
    command: --transaction-isolation=READ-COMMITTED
    volumes:
      - db:/var/lib/mysql
    env_file:
      - .env
    environment:
      - MYSQL_ROOT_PASSWORD=${NEXTCLOUD_DB_ROOT_PASSWORD}
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWORD}

  redis:
    image: redis:alpine
    container_name: nextcloud_redis
    restart: always
    networks:
      - caddynet
    environment:
      - REDIS_HOST=${NEXTCLOUD_REDIS_HOST}

  nextcloud:
    image: nextcloud
    container_name: nextcloud
    restart: always
    networks:
      - caddynet
    ports:
      - ${NEXTCLOUD_PORT}:${NEXTCLOUD_DOCKER_PORT}
    depends_on:
      - redis
      - db
    volumes:
      - nextcloud:/var/www/html
    env_file:
      - .env
    environment:
      - MYSQL_HOST=${NEXTCLOUD_DB_HOST}
      - MYSQL_DATABASE=${NEXTCLOUD_DB_NAME}
      - MYSQL_USER=${NEXTCLOUD_DB_USER}
      - MYSQL_PASSWORD=${NEXTCLOUD_DB_PASSWORD}
      - REDIS_HOST=${NEXTCLOUD_REDIS_HOST}
      - NEXTCLOUD_TRUSTED_DOMAINS=${NEXTCLOUD_TRUSTED_DOMAINS}
      - NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}
      - NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}

networks:
  caddynet:
    attachable: true
    driver: bridge

volumes:
  caddy_data:
  caddy_config:
  komga_config:
  jellyfin_config:
  jellyfin_cache:
  jellyseerr_config:
  radarr_config:
  sonarr_config:
  prowlarr_config:
  nextcloud:
  db:
